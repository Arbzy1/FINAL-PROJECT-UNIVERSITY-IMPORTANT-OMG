name: PropertyFinder CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.13.2
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.2"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi
          pip install pytest pytest-cov
      - name: Test with pytest (excluding external tests)
        run: |
          cd server
          python -m pytest tests/unit tests/integration --cov=. --cov-report=xml --cov-report=term-missing -v -k "not external"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./server/coverage.xml
          fail_ci_if_error: false

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      - name: Install dependencies
        run: |
          cd client
          npm ci
      - name: Run unit and component tests
        run: |
          cd client
          npm test -- --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./client/coverage/lcov.info
          fail_ci_if_error: false

  e2e-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js and Python
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13.2"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi
          cd client
          npm ci
      - name: Start backend server
        run: |
          cd server
          python app.py &
          sleep 5
      - name: Start frontend
        run: |
          cd client
          npm start &
          sleep 10
      - name: Run Cypress tests
        run: |
          cd client
          npm run cypress:run
      - name: Upload Cypress screenshots if tests fail
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: client/cypress/screenshots

  performance-test:
    runs-on: ubuntu-latest
    needs: [backend-test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.13.2
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.2"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install locust
          if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi
      - name: Start backend server
        run: |
          cd server
          python app.py &
          sleep 5
      - name: Run performance tests
        run: |
          cd server/tests/performance
          locust -f locustfile.py --headless -u 10 -r 1 --host http://localhost:5000 -t 30s --only-summary
      - name: Generate performance report
        run: |
          echo "## Performance Test Results" > performance-report.md
          echo "* Number of users: 10" >> performance-report.md
          echo "* Test duration: 30 seconds" >> performance-report.md
          echo "* Results available as artifact" >> performance-report.md
      - name: Upload performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance-report.md 